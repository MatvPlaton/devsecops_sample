name: Deploy on Runner

on:
  push:
    branches:
      - main  

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9  
        
    - name: Install Dependencies
      run: |
        sudo apt update
        sudo apt install -y python3-pip python3-venv
        python3 -m venv venv
        source venv/bin/activate
        pip install -r requirements.txt

    - name: Apply Migrations
      run: |
        source venv/bin/activate
        python3 manage.py migrate

    - name: Run Development Server
      run: |
        source venv/bin/activate
        nohup python3 manage.py runserver 0.0.0.0:8000 &
        sleep 15
    - name: Install OWASP ZAP
      run: |
        echo "Installing OWASP ZAP..."
        sudo apt update
        sudo apt install -y wget openjdk-11-jdk
        wget https://github.com/zaproxy/zaproxy/releases/download/v2.12.0/ZAP_2_12_0_unix.sh
        chmod +x ZAP_2_12_0_unix.sh
        ./ZAP_2_12_0_unix.sh -q  # Install ZAP silently
        export PATH=$PATH:/opt/zaproxy

    # Step 4: Run OWASP ZAP Scan
    - name: Run OWASP ZAP Baseline Scan
      run: |
        echo "Running OWASP ZAP against localhost:8080..."
        zap.sh -daemon -host 127.0.0.1 -port 8090 -config api.addrs.addr.name=.* -config api.addrs.addr.regex=true
        sleep 15  # Allow ZAP to initialize
        curl -X GET "http://127.0.0.1:8090/JSON/ascan/action/scan/?url=http://127.0.0.1:8000&recurse=true"
        sleep 60  # Wait for the scan to complete
        curl -X GET "http://127.0.0.1:8090/OTHER/core/other/htmlreport/" -o dast_report.html

    # Step 5: Upload the DAST Report
    - name: Upload ZAP Report
      uses: actions/upload-artifact@v3
      with:
        name: ZAP Report
        path: zap_report.html
